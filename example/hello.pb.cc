// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: hello.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "hello.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace helloworld {
class HelloTestItemDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<HelloTestItem>
     _instance;
} _HelloTestItem_default_instance_;
class HelloTestData_TmEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<HelloTestData::HelloTestData_TmEntry>
     _instance;
} _HelloTestData_TmEntry_default_instance_;
class HelloTestDataDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<HelloTestData>
     _instance;
} _HelloTestData_default_instance_;

namespace protobuf_hello_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[3];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HelloTestItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HelloTestItem, testid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HelloTestItem, ruleid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HelloTestData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HelloTestData, sv_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HelloTestData, items_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HelloTestData, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HelloTestData, tk_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HelloTestData, tm_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(HelloTestItem)},
  { 7, -1, sizeof(HelloTestData)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_HelloTestItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_HelloTestData_TmEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_HelloTestData_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "hello.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
file_level_metadata[1].reflection = HelloTestData::HelloTestData_TmEntry::CreateReflection(file_level_metadata[1].descriptor, _HelloTestData_TmEntry_default_instance_._instance.get_mutable());
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _HelloTestItem_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_HelloTestItem_default_instance_);_HelloTestData_TmEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_HelloTestData_TmEntry_default_instance_);_HelloTestData_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_HelloTestData_default_instance_);_HelloTestData_TmEntry_default_instance_._instance.get_mutable()->set_default_instance(_HelloTestData_TmEntry_default_instance_._instance.get_mutable());
  _HelloTestData_TmEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
  _HelloTestData_default_instance_._instance.get_mutable()->tk_ = const_cast< ::helloworld::HelloTestItem*>(
      ::helloworld::HelloTestItem::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\013hello.proto\022\nhelloworld\"/\n\rHelloTestIt"
      "em\022\016\n\006testid\030\001 \001(\003\022\016\n\006ruleid\030\002 \001(\003\"\321\001\n\rH"
      "elloTestData\022\n\n\002sv\030\001 \001(\t\022(\n\005items\030\002 \003(\0132"
      "\031.helloworld.HelloTestItem\022\t\n\001k\030\003 \003(\003\022%\n"
      "\002tk\030\004 \001(\0132\031.helloworld.HelloTestItem\022-\n\002"
      "tm\030\005 \003(\0132!.helloworld.HelloTestData.TmEn"
      "try\032)\n\007TmEntry\022\013\n\003key\030\001 \001(\005\022\r\n\005value\030\002 \001"
      "(\t:\0028\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 294);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "hello.proto", &protobuf_RegisterTypes);
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_hello_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HelloTestItem::kTestidFieldNumber;
const int HelloTestItem::kRuleidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HelloTestItem::HelloTestItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_hello_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:helloworld.HelloTestItem)
}
HelloTestItem::HelloTestItem(const HelloTestItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&testid_, &from.testid_,
    static_cast<size_t>(reinterpret_cast<char*>(&ruleid_) -
    reinterpret_cast<char*>(&testid_)) + sizeof(ruleid_));
  // @@protoc_insertion_point(copy_constructor:helloworld.HelloTestItem)
}

void HelloTestItem::SharedCtor() {
  ::memset(&testid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ruleid_) -
      reinterpret_cast<char*>(&testid_)) + sizeof(ruleid_));
  _cached_size_ = 0;
}

HelloTestItem::~HelloTestItem() {
  // @@protoc_insertion_point(destructor:helloworld.HelloTestItem)
  SharedDtor();
}

void HelloTestItem::SharedDtor() {
}

void HelloTestItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HelloTestItem::descriptor() {
  protobuf_hello_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_hello_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HelloTestItem& HelloTestItem::default_instance() {
  protobuf_hello_2eproto::InitDefaults();
  return *internal_default_instance();
}

HelloTestItem* HelloTestItem::New(::google::protobuf::Arena* arena) const {
  HelloTestItem* n = new HelloTestItem;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HelloTestItem::Clear() {
// @@protoc_insertion_point(message_clear_start:helloworld.HelloTestItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&testid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ruleid_) -
      reinterpret_cast<char*>(&testid_)) + sizeof(ruleid_));
  _internal_metadata_.Clear();
}

bool HelloTestItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:helloworld.HelloTestItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 testid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &testid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 ruleid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &ruleid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:helloworld.HelloTestItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:helloworld.HelloTestItem)
  return false;
#undef DO_
}

void HelloTestItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:helloworld.HelloTestItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 testid = 1;
  if (this->testid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->testid(), output);
  }

  // int64 ruleid = 2;
  if (this->ruleid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->ruleid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:helloworld.HelloTestItem)
}

::google::protobuf::uint8* HelloTestItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:helloworld.HelloTestItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 testid = 1;
  if (this->testid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->testid(), target);
  }

  // int64 ruleid = 2;
  if (this->ruleid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->ruleid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:helloworld.HelloTestItem)
  return target;
}

size_t HelloTestItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:helloworld.HelloTestItem)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 testid = 1;
  if (this->testid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->testid());
  }

  // int64 ruleid = 2;
  if (this->ruleid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->ruleid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HelloTestItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:helloworld.HelloTestItem)
  GOOGLE_DCHECK_NE(&from, this);
  const HelloTestItem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HelloTestItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:helloworld.HelloTestItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:helloworld.HelloTestItem)
    MergeFrom(*source);
  }
}

void HelloTestItem::MergeFrom(const HelloTestItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:helloworld.HelloTestItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.testid() != 0) {
    set_testid(from.testid());
  }
  if (from.ruleid() != 0) {
    set_ruleid(from.ruleid());
  }
}

void HelloTestItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:helloworld.HelloTestItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HelloTestItem::CopyFrom(const HelloTestItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:helloworld.HelloTestItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HelloTestItem::IsInitialized() const {
  return true;
}

void HelloTestItem::Swap(HelloTestItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HelloTestItem::InternalSwap(HelloTestItem* other) {
  using std::swap;
  swap(testid_, other->testid_);
  swap(ruleid_, other->ruleid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HelloTestItem::GetMetadata() const {
  protobuf_hello_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_hello_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HelloTestItem

// int64 testid = 1;
void HelloTestItem::clear_testid() {
  testid_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 HelloTestItem::testid() const {
  // @@protoc_insertion_point(field_get:helloworld.HelloTestItem.testid)
  return testid_;
}
void HelloTestItem::set_testid(::google::protobuf::int64 value) {
  
  testid_ = value;
  // @@protoc_insertion_point(field_set:helloworld.HelloTestItem.testid)
}

// int64 ruleid = 2;
void HelloTestItem::clear_ruleid() {
  ruleid_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 HelloTestItem::ruleid() const {
  // @@protoc_insertion_point(field_get:helloworld.HelloTestItem.ruleid)
  return ruleid_;
}
void HelloTestItem::set_ruleid(::google::protobuf::int64 value) {
  
  ruleid_ = value;
  // @@protoc_insertion_point(field_set:helloworld.HelloTestItem.ruleid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

HelloTestData::HelloTestData_TmEntry::HelloTestData_TmEntry() {}
HelloTestData::HelloTestData_TmEntry::HelloTestData_TmEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata HelloTestData::HelloTestData_TmEntry::GetMetadata() const {
  protobuf_hello_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_hello_2eproto::file_level_metadata[1];
}
void HelloTestData::HelloTestData_TmEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void HelloTestData::HelloTestData_TmEntry::MergeFrom(const HelloTestData_TmEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HelloTestData::kSvFieldNumber;
const int HelloTestData::kItemsFieldNumber;
const int HelloTestData::kKFieldNumber;
const int HelloTestData::kTkFieldNumber;
const int HelloTestData::kTmFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HelloTestData::HelloTestData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_hello_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:helloworld.HelloTestData)
}
HelloTestData::HelloTestData(const HelloTestData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      items_(from.items_),
      k_(from.k_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  tm_.MergeFrom(from.tm_);
  sv_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sv().size() > 0) {
    sv_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sv_);
  }
  if (from.has_tk()) {
    tk_ = new ::helloworld::HelloTestItem(*from.tk_);
  } else {
    tk_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:helloworld.HelloTestData)
}

void HelloTestData::SharedCtor() {
  sv_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tk_ = NULL;
  _cached_size_ = 0;
}

HelloTestData::~HelloTestData() {
  // @@protoc_insertion_point(destructor:helloworld.HelloTestData)
  SharedDtor();
}

void HelloTestData::SharedDtor() {
  sv_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete tk_;
}

void HelloTestData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HelloTestData::descriptor() {
  protobuf_hello_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_hello_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HelloTestData& HelloTestData::default_instance() {
  protobuf_hello_2eproto::InitDefaults();
  return *internal_default_instance();
}

HelloTestData* HelloTestData::New(::google::protobuf::Arena* arena) const {
  HelloTestData* n = new HelloTestData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HelloTestData::Clear() {
// @@protoc_insertion_point(message_clear_start:helloworld.HelloTestData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  items_.Clear();
  k_.Clear();
  tm_.Clear();
  sv_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && tk_ != NULL) {
    delete tk_;
  }
  tk_ = NULL;
  _internal_metadata_.Clear();
}

bool HelloTestData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:helloworld.HelloTestData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sv = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sv()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sv().data(), static_cast<int>(this->sv().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "helloworld.HelloTestData.sv"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .helloworld.HelloTestItem items = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_items()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 k = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 26u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .helloworld.HelloTestItem tk = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_tk()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<int32, string> tm = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          HelloTestData_TmEntry::Parser< ::google::protobuf::internal::MapField<
              HelloTestData_TmEntry,
              ::google::protobuf::int32, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::int32, ::std::string > > parser(&tm_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "helloworld.HelloTestData.TmEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:helloworld.HelloTestData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:helloworld.HelloTestData)
  return false;
#undef DO_
}

void HelloTestData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:helloworld.HelloTestData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sv = 1;
  if (this->sv().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sv().data(), static_cast<int>(this->sv().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "helloworld.HelloTestData.sv");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sv(), output);
  }

  // repeated .helloworld.HelloTestItem items = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->items_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->items(static_cast<int>(i)), output);
  }

  // repeated int64 k = 3;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
  }
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->k(i), output);
  }

  // .helloworld.HelloTestItem tk = 4;
  if (this->has_tk()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->tk_, output);
  }

  // map<int32, string> tm = 5;
  if (!this->tm().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int32, ::std::string >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "helloworld.HelloTestData.TmEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->tm().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->tm().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int32, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::std::string >::const_iterator
          it = this->tm().begin();
          it != this->tm().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<HelloTestData_TmEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(tm_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            5, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)].second);
      }
    } else {
      ::google::protobuf::scoped_ptr<HelloTestData_TmEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::std::string >::const_iterator
          it = this->tm().begin();
          it != this->tm().end(); ++it) {
        entry.reset(tm_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            5, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:helloworld.HelloTestData)
}

::google::protobuf::uint8* HelloTestData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:helloworld.HelloTestData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sv = 1;
  if (this->sv().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sv().data(), static_cast<int>(this->sv().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "helloworld.HelloTestData.sv");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->sv(), target);
  }

  // repeated .helloworld.HelloTestItem items = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->items_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->items(static_cast<int>(i)), deterministic, target);
  }

  // repeated int64 k = 3;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->k_, target);
  }

  // .helloworld.HelloTestItem tk = 4;
  if (this->has_tk()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->tk_, deterministic, target);
  }

  // map<int32, string> tm = 5;
  if (!this->tm().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int32, ::std::string >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "helloworld.HelloTestData.TmEntry.value");
      }
    };

    if (deterministic &&
        this->tm().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->tm().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int32, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::std::string >::const_iterator
          it = this->tm().begin();
          it != this->tm().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<HelloTestData_TmEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(tm_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       5, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)].second);
      }
    } else {
      ::google::protobuf::scoped_ptr<HelloTestData_TmEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::std::string >::const_iterator
          it = this->tm().begin();
          it != this->tm().end(); ++it) {
        entry.reset(tm_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       5, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:helloworld.HelloTestData)
  return target;
}

size_t HelloTestData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:helloworld.HelloTestData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .helloworld.HelloTestItem items = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->items_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->items(static_cast<int>(i)));
    }
  }

  // repeated int64 k = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->k_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // map<int32, string> tm = 5;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->tm_size());
  {
    ::google::protobuf::scoped_ptr<HelloTestData_TmEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::int32, ::std::string >::const_iterator
        it = this->tm().begin();
        it != this->tm().end(); ++it) {
      entry.reset(tm_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string sv = 1;
  if (this->sv().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sv());
  }

  // .helloworld.HelloTestItem tk = 4;
  if (this->has_tk()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->tk_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HelloTestData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:helloworld.HelloTestData)
  GOOGLE_DCHECK_NE(&from, this);
  const HelloTestData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HelloTestData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:helloworld.HelloTestData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:helloworld.HelloTestData)
    MergeFrom(*source);
  }
}

void HelloTestData::MergeFrom(const HelloTestData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:helloworld.HelloTestData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  items_.MergeFrom(from.items_);
  k_.MergeFrom(from.k_);
  tm_.MergeFrom(from.tm_);
  if (from.sv().size() > 0) {

    sv_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sv_);
  }
  if (from.has_tk()) {
    mutable_tk()->::helloworld::HelloTestItem::MergeFrom(from.tk());
  }
}

void HelloTestData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:helloworld.HelloTestData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HelloTestData::CopyFrom(const HelloTestData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:helloworld.HelloTestData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HelloTestData::IsInitialized() const {
  return true;
}

void HelloTestData::Swap(HelloTestData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HelloTestData::InternalSwap(HelloTestData* other) {
  using std::swap;
  items_.InternalSwap(&other->items_);
  k_.InternalSwap(&other->k_);
  tm_.Swap(&other->tm_);
  sv_.Swap(&other->sv_);
  swap(tk_, other->tk_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HelloTestData::GetMetadata() const {
  protobuf_hello_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_hello_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HelloTestData

// string sv = 1;
void HelloTestData::clear_sv() {
  sv_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& HelloTestData::sv() const {
  // @@protoc_insertion_point(field_get:helloworld.HelloTestData.sv)
  return sv_.GetNoArena();
}
void HelloTestData::set_sv(const ::std::string& value) {
  
  sv_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:helloworld.HelloTestData.sv)
}
#if LANG_CXX11
void HelloTestData::set_sv(::std::string&& value) {
  
  sv_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:helloworld.HelloTestData.sv)
}
#endif
void HelloTestData::set_sv(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  sv_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:helloworld.HelloTestData.sv)
}
void HelloTestData::set_sv(const char* value, size_t size) {
  
  sv_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:helloworld.HelloTestData.sv)
}
::std::string* HelloTestData::mutable_sv() {
  
  // @@protoc_insertion_point(field_mutable:helloworld.HelloTestData.sv)
  return sv_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* HelloTestData::release_sv() {
  // @@protoc_insertion_point(field_release:helloworld.HelloTestData.sv)
  
  return sv_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void HelloTestData::set_allocated_sv(::std::string* sv) {
  if (sv != NULL) {
    
  } else {
    
  }
  sv_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sv);
  // @@protoc_insertion_point(field_set_allocated:helloworld.HelloTestData.sv)
}

// repeated .helloworld.HelloTestItem items = 2;
int HelloTestData::items_size() const {
  return items_.size();
}
void HelloTestData::clear_items() {
  items_.Clear();
}
const ::helloworld::HelloTestItem& HelloTestData::items(int index) const {
  // @@protoc_insertion_point(field_get:helloworld.HelloTestData.items)
  return items_.Get(index);
}
::helloworld::HelloTestItem* HelloTestData::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:helloworld.HelloTestData.items)
  return items_.Mutable(index);
}
::helloworld::HelloTestItem* HelloTestData::add_items() {
  // @@protoc_insertion_point(field_add:helloworld.HelloTestData.items)
  return items_.Add();
}
::google::protobuf::RepeatedPtrField< ::helloworld::HelloTestItem >*
HelloTestData::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:helloworld.HelloTestData.items)
  return &items_;
}
const ::google::protobuf::RepeatedPtrField< ::helloworld::HelloTestItem >&
HelloTestData::items() const {
  // @@protoc_insertion_point(field_list:helloworld.HelloTestData.items)
  return items_;
}

// repeated int64 k = 3;
int HelloTestData::k_size() const {
  return k_.size();
}
void HelloTestData::clear_k() {
  k_.Clear();
}
::google::protobuf::int64 HelloTestData::k(int index) const {
  // @@protoc_insertion_point(field_get:helloworld.HelloTestData.k)
  return k_.Get(index);
}
void HelloTestData::set_k(int index, ::google::protobuf::int64 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:helloworld.HelloTestData.k)
}
void HelloTestData::add_k(::google::protobuf::int64 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:helloworld.HelloTestData.k)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
HelloTestData::k() const {
  // @@protoc_insertion_point(field_list:helloworld.HelloTestData.k)
  return k_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
HelloTestData::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:helloworld.HelloTestData.k)
  return &k_;
}

// .helloworld.HelloTestItem tk = 4;
bool HelloTestData::has_tk() const {
  return this != internal_default_instance() && tk_ != NULL;
}
void HelloTestData::clear_tk() {
  if (GetArenaNoVirtual() == NULL && tk_ != NULL) delete tk_;
  tk_ = NULL;
}
const ::helloworld::HelloTestItem& HelloTestData::tk() const {
  const ::helloworld::HelloTestItem* p = tk_;
  // @@protoc_insertion_point(field_get:helloworld.HelloTestData.tk)
  return p != NULL ? *p : *reinterpret_cast<const ::helloworld::HelloTestItem*>(
      &::helloworld::_HelloTestItem_default_instance_);
}
::helloworld::HelloTestItem* HelloTestData::mutable_tk() {
  
  if (tk_ == NULL) {
    tk_ = new ::helloworld::HelloTestItem;
  }
  // @@protoc_insertion_point(field_mutable:helloworld.HelloTestData.tk)
  return tk_;
}
::helloworld::HelloTestItem* HelloTestData::release_tk() {
  // @@protoc_insertion_point(field_release:helloworld.HelloTestData.tk)
  
  ::helloworld::HelloTestItem* temp = tk_;
  tk_ = NULL;
  return temp;
}
void HelloTestData::set_allocated_tk(::helloworld::HelloTestItem* tk) {
  delete tk_;
  tk_ = tk;
  if (tk) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:helloworld.HelloTestData.tk)
}

// map<int32, string> tm = 5;
int HelloTestData::tm_size() const {
  return tm_.size();
}
void HelloTestData::clear_tm() {
  tm_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::int32, ::std::string >&
HelloTestData::tm() const {
  // @@protoc_insertion_point(field_map:helloworld.HelloTestData.tm)
  return tm_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::int32, ::std::string >*
HelloTestData::mutable_tm() {
  // @@protoc_insertion_point(field_mutable_map:helloworld.HelloTestData.tm)
  return tm_.MutableMap();
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace helloworld

// @@protoc_insertion_point(global_scope)
